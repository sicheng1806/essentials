基于pytez绘制流程图
^^^^^^^^^^^^^^^^^^^^^^^^^

在阅读matplotlib源码时遇到了一个问题，如果可以高效生成流程图，不必是太严谨的
流程图，既可以快速理解源码，也可以快速回顾。查询绘制流程图的解决方案后，发现只有
基于 flowchart.js 的解决方案，但是flowchart.js绘制流程图的方式不是很流程图(其将\
流程图理解为框型和连线，单独设置框，再设置连线规则，这样的设计易于实现，但是不易于理解，
相当于要先绘制流程图，再利用其用电脑绘出，这个流程中流程图的逻辑性被大大减小)

我想寻求一款与 flowchart.js 不同的道路，即在书写伪代码的同时将流程图得以绘出。
就这一点来看,typst似乎是一个更好的解决方案，而且typst好像还并没有流程图绘制的解决方案。
因此使用typst开发(即内容和代码相间的文本安排)显得更加合理，但是python具有更强的扩展性，
因此使用python开发永远都不是一个错误的选择。因此，将尝试基于之前设计的pytez以及typst中的cetz
来完成绘制流程图解决方案的开发。

